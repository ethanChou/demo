<!--MessageBox显示样式，根据自己需要修改样式-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:wpf="clr-namespace:WPF.Extend">

    <Color x:Key="MsgWindowBackgroundColor">#ffffff</Color>

    
    <FontFamily x:Key="MsgDefaultFontFamily">Microsoft YaHei</FontFamily>
    
    <!--按钮不可以状态颜色-->
    <SolidColorBrush x:Key="MsgButtonTextDisabled" Color="#515151" />

    <!--关闭按钮-->
    <SolidColorBrush x:Key="MsgCloseButtonBackground" Color="{StaticResource MsgWindowBackgroundColor}"  Opacity="0" />
    <SolidColorBrush x:Key="MsgCloseButtonBackgroundOnMoseOver" Color="Transparent" />
    <SolidColorBrush x:Key="MsgCloseButtonForegroundOnMoseOver" Color="#fefefe" />
    <SolidColorBrush x:Key="MsgCloseButtonBackgroundIsPressed" Color="#f15050" />
    <SolidColorBrush x:Key="MsgCloseButtonForegroundIsPressed" Color="White" />
    <Thickness       x:Key="MsgCloseButtonThickness" Left="0" Right="0" Top="0" Bottom="0" />
    <system:Double   x:Key="MsgCloseButtonWidth">30</system:Double>

    <!--MessageBox 按钮-->
    <SolidColorBrush x:Key="MsgButtonBackgroundNormal"  Color="#aa996e"/>
    <SolidColorBrush x:Key="MsgButtonBackgroundHover"  Color="#9c8b61"/>
    <SolidColorBrush x:Key="MsgButtonBackgroundPress"  Color="#89774b"/>
    <SolidColorBrush x:Key="MsgButtonForeground" Color="White" />
    <SolidColorBrush x:Key="MsgButtonText" Color="#ffffff" />
    <system:Double   x:Key="MsgButtonWidth">60</system:Double>
    <system:Double   x:Key="MsgButtonHeight">24</system:Double>
    <Thickness       x:Key="MsgButtonThickness" Left="8" Right="8" Top="0" Bottom="0" />
    <CornerRadius    x:Key="MsgButtonCornerRadius" TopLeft="0" TopRight="0" BottomLeft="0" BottomRight="0" />

    <!--容器-->
    <Thickness       x:Key="MsgItemControlThickness" Left="0" Right="0" Top="0" Bottom="8" />
    <Thickness       x:Key="MsgCheckBoxThickness" Left="8" Right="0" Top="0" Bottom="15" />
    <SolidColorBrush x:Key="MsgCheckBoxContentForegroud" Color="#444444" />
    
    <!--标题背景颜色-->
    <SolidColorBrush x:Key="MsgWindowTitleBackgournd">#9c8b61</SolidColorBrush>
    <!--标题字体颜色-->
    <SolidColorBrush x:Key="MsgWindowTitleForegroud" Color="#FFFFFF" />
    <!--左上标题字体大小-->
    <system:Double   x:Key="MsgWindowTitleFontSize">15</system:Double>
    <!--标题高度-->
    <system:Double   x:Key="MsgWindowTitleHeight">30</system:Double>

    <!--内容body-->
    <SolidColorBrush x:Key="MsgWindowBodyColor" Color="#FFFFFF" />
    <!--窗体的样式-->
    <system:Double   x:Key="MsgWindowWidth">400</system:Double>

    <!--内容字体颜色-->
    <SolidColorBrush x:Key="MsgContentForegroud" Color="#444444" />
    <!--内容字体大小-->
    <system:Double   x:Key="MsgContentFontSize">14</system:Double>

    <!--警示图标宽高-->
    <system:Double   x:Key="MsgIconWidth">40</system:Double>
    <system:Double   x:Key="MsgIconHeight">40</system:Double>


    <Style x:Key="MessageButton" TargetType="ButtonBase" >
        <Setter Property="Width" Value="{DynamicResource MsgButtonWidth}" />
        <Setter Property="Height" Value="{DynamicResource MsgButtonHeight}"></Setter>
        <Setter Property="Margin" Value="{DynamicResource MsgButtonThickness}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource MsgButtonForeground}"/>
        <Setter Property="Background" Value="{DynamicResource MsgButtonBackgroundNormal}"></Setter>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{DynamicResource MsgButtonCornerRadius}"
                                SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MsgButtonBackgroundHover}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource MsgButtonBackgroundPress}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource MsgButtonTextDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MessageButtonBase" TargetType="ButtonBase">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource MsgDefaultFontFamily}"></Setter>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MessageCloseButton" TargetType="ButtonBase" BasedOn="{StaticResource MessageButton}">
        <Setter Property="Width" Value="{DynamicResource MsgCloseButtonWidth}" />
        <Setter Property="Height" Value="{DynamicResource MsgWindowTitleHeight}" />
        <Setter Property="Background" Value="{DynamicResource MsgCloseButtonBackground}" />
        <Setter Property="FontFamily" Value="{DynamicResource MsgDefaultFontFamily}"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MsgCloseButtonBackgroundOnMoseOver}" />
                <Setter Property="Foreground" Value="{DynamicResource MsgCloseButtonForegroundOnMoseOver}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource MsgCloseButtonBackgroundIsPressed}" />
                <Setter Property="Foreground" Value="{DynamicResource MsgCloseButtonForegroundIsPressed}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource MsgButtonTextDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MessageWindowStyle" TargetType="{x:Type wpf:WindowBase}">
        <Setter Property="Width" Value="{DynamicResource MsgWindowWidth}"></Setter>
        <Setter Property="AllowsTransparency" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Opacity" Value="1" />
        <Setter Property="ShowInTaskbar" Value="false"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="SizeToContent" Value="Height"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid Margin="10">
                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"  
                               RadiusX="1" RadiusY="1">
                            <Rectangle.Effect>
                                <DropShadowEffect BlurRadius="6" ShadowDepth="0"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Border Background="{TemplateBinding Background}"  
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}"  
                            Padding="{TemplateBinding Margin}"  
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  
                            CornerRadius="5">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>