<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:VisitorManager"
                    xmlns:vm="clr-namespace:VisitorManager.ViewModel;assembly=VisitorManager.ViewModel"
                    xmlns:mbexd="http://wpfextend.com/">

    <vm:CardTypeConverter x:Key="CardTypeConverter"></vm:CardTypeConverter>
    <vm:PassCardTypeConverter x:Key="PassCardTypeConverter"></vm:PassCardTypeConverter>
    <vm:VisitorStatusConverter x:Key="VisitorStatusConverter"></vm:VisitorStatusConverter>
    <vm:VisitorStatusToEnableConverter x:Key="VisitorStatusToEnableConverter"></vm:VisitorStatusToEnableConverter>
    <vm:TimerFormatConverter x:Key="TimerFormatConverter"></vm:TimerFormatConverter>
    <vm:NegateConverter x:Key="NegeateConverter"></vm:NegateConverter>
    <vm:IntToVisibilityConverter x:Key="IntToVisibilityConverter"></vm:IntToVisibilityConverter>
    <vm:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></vm:BooleanToVisibilityConverter>
    <vm:IntConverter x:Key="IntConverter"></vm:IntConverter>
    <vm:TelephoneConverter x:Key="TelephoneConverter"></vm:TelephoneConverter>
    <vm:ImageListBoxItemTemplateSizeConvert x:Key="sizeConverter" />
    <vm:ImageListBoxItemHeightConvert x:Key="HeightSizeConverter" />
    <vm:IntToBooleanConverter x:Key="IntToBooleanConverter"></vm:IntToBooleanConverter>
    <vm:IDConverter x:Key="IDConverter"></vm:IDConverter>
    <vm:InverseBooleanConverter x:Key="InverseBooleanConverter"></vm:InverseBooleanConverter>
    <vm:StatusToColorConverter x:Key="StatusToColorConverter"></vm:StatusToColorConverter>
    <vm:VisitorStatusToVisibilityConverter x:Key="VisitorStatusToVisibilityConverter"></vm:VisitorStatusToVisibilityConverter>
    
    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="Transparent" Opacity="1"/>
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#353535" Opacity="1"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#b3a174"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#b3a174"/>
    <SolidColorBrush x:Key="BorderColor" Color="#353535" />
    <SolidColorBrush x:Key="ThemeColor" Color="#fFa927"></SolidColorBrush>

    <Style x:Key="SearchButton" TargetType="ButtonBase" >
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="0"
                                SnapsToDevicePixels="true">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Transparent" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SearchTextBoxStyle" TargetType="TextBox" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid>
                                <ScrollViewer  x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                <TextBlock FontSize="13" x:Name="WaterMark" FontFamily="{DynamicResource DefaultFontFamily}" Focusable="False" Visibility="Collapsed" Text="{TemplateBinding Tag}" Margin="4,0,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.5"/>
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text" Value="">
                            <Setter Property="Visibility" TargetName="WaterMark" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContentCenterStyle"  
               TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment"  
                    Value="Center" />
        <Setter Property="VerticalAlignment"  
                    Value="Center" />
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="#787878"></Setter>
    </Style>

    <Style x:Key="NoresizeWindow" TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="ShowInTaskbar" Value="false"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid Margin="10">
                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"  
                               RadiusX="3" RadiusY="3">
                            <Rectangle.Effect>
                                <DropShadowEffect BlurRadius="10" ShadowDepth="0"/>
                            </Rectangle.Effect>
                        </Rectangle>
                        <Border Background="{TemplateBinding Background}"  
                            BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}"  
                            Padding="{TemplateBinding Margin}"  
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  
                            CornerRadius="5">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ImageListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Item.MouseOver.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" Margin="10,10,10,10" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Item.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Accent}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Item.SelectedInactive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Item.SelectedInactive.Border}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Accent}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RegisterTemporaryVisitorListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#313131"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" Margin="1,1,0,0" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#454545"/>
                        </MultiTrigger>
                        <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                            </MultiTrigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ThemeColor}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="VisitingDisplayItemTemplate" >
        <Grid  Margin="2" 
                   Width="{Binding Path=ActualWidth,RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBox}}, ConverterParameter=4,Converter={StaticResource sizeConverter}}" 
                   Height="{Binding Path=ActualHeight,RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBox}}, ConverterParameter=3,Converter={StaticResource HeightSizeConverter}}" >
            <Border Margin="5"  BorderThickness="1" CornerRadius="0" BorderBrush="{Binding Vt_status,Converter={StaticResource StatusToColorConverter}}" >
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition Height="30"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*"></ColumnDefinition>
                        <ColumnDefinition Width="6*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0" Grid.RowSpan="2">
                        <Image  Source="{Binding Path=Vt_imgurl}" Stretch="Uniform"></Image>
                    </Grid>
                    <Grid Grid.Column="1" Grid.RowSpan="2" Margin="3,0,0,0" >
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <Style TargetType="TextBlock">
                                <Setter Property="FontFamily" Value="{StaticResource DefaultFontFamily}"></Setter>
                                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                                <Setter Property="Foreground" Value="White"></Setter>
                            </Style>
                        </Grid.Resources>
                        <StackPanel Grid.Row="0" Orientation="Vertical">
                            <TextBlock Text="姓名" FontWeight="Bold" FontSize="10" Foreground="#ffa100" ></TextBlock>
                            <Label Margin="0,0,0,0" Background="#2b2b2b" FontSize="11" VerticalContentAlignment="Center" VerticalAlignment="Center" ToolTip="{Binding Vt_name}" Content="{Binding Vt_name}" ></Label>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Orientation="Vertical" >
                            <TextBlock Text="证件号码" FontWeight="Bold" FontSize="10" Foreground="#ffa100"></TextBlock>
                            <Label  Margin="0,0,0,0" Background="#2b2b2b" FontSize="11" VerticalContentAlignment="Center" ToolTip="{Binding Vt_identify_no}" Content="{Binding Vt_identify_no}"></Label>
                        </StackPanel>
                        <StackPanel Grid.Row="2" Orientation="Vertical">
                            <TextBlock Text="被访单位" FontWeight="Bold" FontSize="10" Foreground="#ffa100"></TextBlock>
                            <Label  Margin="0,0,0,0" Background="#2b2b2b" FontSize="11" VerticalContentAlignment="Center" ToolTip="{Binding Vt_visit_department_id,Converter={StaticResource IDConverter},ConverterParameter=0}" Content="{Binding Vt_visit_department_id,Converter={StaticResource IDConverter},ConverterParameter=0}"></Label>
                        </StackPanel>
                        <StackPanel Grid.Row="3" Orientation="Vertical">
                            <TextBlock Text="被访人" FontWeight="Bold" FontSize="10" Foreground="#ffa100"></TextBlock>
                            <Label  Margin="0,0,0,0" Background="#2b2b2b" FontSize="11" VerticalContentAlignment="Center" ToolTip="{Binding Vt_visit_employee_id,Converter={StaticResource IDConverter},ConverterParameter=1}" Content="{Binding Vt_visit_employee_id,Converter={StaticResource IDConverter},ConverterParameter=1}"></Label>
                        </StackPanel>
                        <StackPanel Grid.Row="4"  Orientation="Vertical">
                            <TextBlock Text="访问状态" FontWeight="Bold" FontSize="10" Foreground="#ffa100"></TextBlock>
                            <Label  Margin="0,0,0,0" Background="#2b2b2b" VerticalContentAlignment="Center"  FontSize="11"  Content="{Binding Vt_status,Converter={StaticResource VisitorStatusConverter}}" ></Label>
                        </StackPanel>
                        <StackPanel Grid.Row="5" Orientation="Vertical">
                            <TextBlock Text="登记时间" FontWeight="Bold" FontSize="10" Foreground="#ffa100"></TextBlock>
                            <Label Margin="0,0,0,0" Background="#2b2b2b" FontSize="11" VerticalContentAlignment="Center" ToolTip="{Binding Vt_in_time,Converter={StaticResource TimerFormatConverter}}" Content="{Binding Vt_in_time,Converter={StaticResource TimerFormatConverter}}" ></Label>
                        </StackPanel>
                    </Grid>

                    <StackPanel Grid.Row="1" Orientation="Horizontal" Background="Black" Opacity="0.8">
                        <mbexd:SimpleButton Visibility="{Binding Vt_status,Converter={StaticResource VisitorStatusToVisibilityConverter}}" Command="{x:Static vm:UserLeaveCommands.LeaveCmd}" CommandParameter="{Binding}"
                                            Normal="{StaticResource ExitN}"
                                            Hover="{StaticResource ExitH}"
                                            Pressed="{StaticResource ExitP}" Width="25" Height="25" ToolTip="退卡离开" Margin="3,0,0,0" ></mbexd:SimpleButton>

                        <mbexd:SimpleButton Normal="{DynamicResource InfoN}"
                                                                Hover="{DynamicResource InfoH}"
                                                                Pressed="{DynamicResource InfoP}"
                                                                HorizontalAlignment="Center"  CommandParameter="{Binding .}" 
                                                                Command="vm:UserVisitingCommands.InfoCmd" Width="23" Height="23" Margin="3,0,0,0" 
                                                                ToolTip="详情"
                                                                ></mbexd:SimpleButton>
                        
                        <mbexd:SimpleButton Visibility="Collapsed" Command="{x:Static vm:UserRegisterCommands.AddPeerUserCmd}" CommandParameter="{Binding}" 
                                            Normal="{StaticResource PeerN}"
                                            Hover="{StaticResource PeerH}"
                                            Pressed="{StaticResource PeerP}" Width="23" Height="23" ToolTip="添加同行人" Margin="3,0,0,0" ></mbexd:SimpleButton>

                        <mbexd:SimpleButton Visibility="Collapsed" Command="{x:Static vm:UserVisitingCommands.DeleteCmd}" CommandParameter="{Binding }" Normal="{StaticResource DeleteN}"
                                                Hover="{StaticResource DeleteH}"
                                                Pressed="{StaticResource DeleteP}" Width="25" Height="25" ToolTip="删除" Margin="3,0,0,0" ></mbexd:SimpleButton>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="RegisterRecentlyVisitorTemplate" >
        <Grid x:Name="grid" Margin="0" Height="80" >
            <Border Margin="0" 
                        Width="{Binding Path=ActualWidth,RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBoxItem}},Converter={StaticResource IntConverter}}"
                        BorderThickness="0" BorderBrush="#313131" CornerRadius="0">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"></RowDefinition>
                        <RowDefinition Height="20"></RowDefinition>
                        <RowDefinition Height="20"></RowDefinition>
                        <RowDefinition Height="20"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    
                    <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center"  FontSize="10" Margin="2"  Text="来访时间" Foreground="{StaticResource ThemeColor}"></TextBlock>
                        <TextBlock VerticalAlignment="Center"  FontSize="10" Margin="2"  Text="{Binding Vt_in_time,Converter={StaticResource TimerFormatConverter}}" Foreground="White"></TextBlock>
                    </StackPanel>


                    <StackPanel Grid.Row="1" Grid.ColumnSpan="1" Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center"  FontSize="10" Margin="2"   Text="离开时间" Foreground="{StaticResource ThemeColor}"></TextBlock>
                        <TextBlock VerticalAlignment="Center" FontSize="10" Margin="2"  Text="{Binding Vt_out_time,Converter={StaticResource TimerFormatConverter}}" Foreground="White"></TextBlock>
                    </StackPanel>

                    <StackPanel Grid.Row="2" Grid.ColumnSpan="1" Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center"  FontSize="10" Margin="2"  Text="被访单位" Foreground="{StaticResource ThemeColor}"></TextBlock>
                        <TextBlock VerticalAlignment="Center"  FontSize="10" Margin="2" Text="{Binding Vt_visit_department_id,Converter={StaticResource IDConverter},ConverterParameter=0}" Foreground="White"></TextBlock>
                    </StackPanel>

                    <StackPanel Grid.Row="3" Grid.ColumnSpan="1" Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center"  FontSize="10" Margin="2"  Text="被访人员" Foreground="{StaticResource ThemeColor}"></TextBlock>
                        <TextBlock VerticalAlignment="Center"  FontSize="10" Margin="2" Text="{Binding Vt_visit_employee_id,Converter={StaticResource IDConverter},ConverterParameter=1}" Foreground="White"></TextBlock>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>

    </DataTemplate>

    <DataTemplate x:Key="RegisterTemporaryVisitorTemplate" >
        <Grid x:Name="grid" Margin="0" Height="80" >
            <Border Margin="0" 
                        Width="{Binding Path=ActualWidth,RelativeSource={RelativeSource Mode=FindAncestor, AncestorLevel=1, AncestorType={x:Type ListBoxItem}},Converter={StaticResource IntConverter}}"
                        BorderThickness="0" BorderBrush="#313131" CornerRadius="0">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"></RowDefinition>
                        <RowDefinition Height="20"></RowDefinition>
                        <RowDefinition Height="20"></RowDefinition>
                        <RowDefinition Height="20"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>

                        <ColumnDefinition Width="30"></ColumnDefinition>
                    </Grid.ColumnDefinitions>


                    <mbexd:SimpleButton Grid.Row="0" Command="vm:UserRegisterCommands.DeleteTempUserCmd" CommandParameter="{Binding}" Grid.Column="1" HorizontalAlignment="Right" 
                                            Normal="{StaticResource DeleteRN}"
                                            Hover="{StaticResource DeleteRH}"
                                            Pressed="{StaticResource DeleteRP}" Width="20" Height="20"></mbexd:SimpleButton>

                    <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal">
                        <TextBlock  Margin="2"  Text="姓   名" Foreground="{StaticResource ThemeColor}"></TextBlock>
                        <TextBlock  Margin="2"  Text="{Binding Vt_name}" Foreground="White"></TextBlock>
                    </StackPanel>


                    <StackPanel Grid.Row="1" Grid.ColumnSpan="1" Orientation="Horizontal">
                        <TextBlock Margin="2"   Text="证件号码" Foreground="{StaticResource ThemeColor}"></TextBlock>
                        <TextBlock Margin="2"  Text="{Binding Vt_identify_no}" Foreground="White"></TextBlock>
                    </StackPanel>

                    <StackPanel Grid.Row="2" Grid.ColumnSpan="1" Orientation="Horizontal">
                        <TextBlock Margin="2"  Text="被访单位" Foreground="{StaticResource ThemeColor}"></TextBlock>
                        <TextBlock  Margin="2" Text="{Binding Vt_visit_department_id,Converter={StaticResource IDConverter},ConverterParameter=0}" Foreground="White"></TextBlock>
                    </StackPanel>

                    <StackPanel Grid.Row="3" Grid.ColumnSpan="1" Orientation="Horizontal">
                        <TextBlock Margin="2"  Text="被访人员" Foreground="{StaticResource ThemeColor}"></TextBlock>
                        <TextBlock  Margin="2" Text="{Binding Vt_visit_employee_id,Converter={StaticResource IDConverter},ConverterParameter=1}" Foreground="White"></TextBlock>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
        <DataTemplate.Triggers>
            <!--<EventTrigger RoutedEvent="Mouse.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard >
                            <DoubleAnimation BeginTime="0:0:0.6" Duration="0:0:0.3" Storyboard.TargetName="grid"   Storyboard.TargetProperty="Height" To="60"></DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard >
                            <DoubleAnimation BeginTime="0:0:0.6" Duration="0:0:0.3" Storyboard.TargetName="grid" Storyboard.TargetProperty="Height" To="30"></DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>-->

        </DataTemplate.Triggers>
    </DataTemplate>

</ResourceDictionary>