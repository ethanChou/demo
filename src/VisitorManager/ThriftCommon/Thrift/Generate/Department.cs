/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace ThriftCommon
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class Department : TBase
  {
    private string _dep_id;
    private string _lnl_id;
    private string _dep_parent_id;
    private string _ad_id;
    private string _dep_no;
    private string _dep_name;
    private bool _dep_isspecial;
    private bool _dep_isdeleted;

    public string Dep_id
    {
      get
      {
        return _dep_id;
      }
      set
      {
        __isset.dep_id = true;
        this._dep_id = value;
      }
    }

    public string Lnl_id
    {
      get
      {
        return _lnl_id;
      }
      set
      {
        __isset.lnl_id = true;
        this._lnl_id = value;
      }
    }

    public string Dep_parent_id
    {
      get
      {
        return _dep_parent_id;
      }
      set
      {
        __isset.dep_parent_id = true;
        this._dep_parent_id = value;
      }
    }

    public string Ad_id
    {
      get
      {
        return _ad_id;
      }
      set
      {
        __isset.ad_id = true;
        this._ad_id = value;
      }
    }

    public string Dep_no
    {
      get
      {
        return _dep_no;
      }
      set
      {
        __isset.dep_no = true;
        this._dep_no = value;
      }
    }

    public string Dep_name
    {
      get
      {
        return _dep_name;
      }
      set
      {
        __isset.dep_name = true;
        this._dep_name = value;
      }
    }

    public bool Dep_isspecial
    {
      get
      {
        return _dep_isspecial;
      }
      set
      {
        __isset.dep_isspecial = true;
        this._dep_isspecial = value;
      }
    }

    public bool Dep_isdeleted
    {
      get
      {
        return _dep_isdeleted;
      }
      set
      {
        __isset.dep_isdeleted = true;
        this._dep_isdeleted = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool dep_id;
      public bool lnl_id;
      public bool dep_parent_id;
      public bool ad_id;
      public bool dep_no;
      public bool dep_name;
      public bool dep_isspecial;
      public bool dep_isdeleted;
    }

    public Department() {
    }

    public void Read (TProtocol iprot)
    {
      iprot.IncrementRecursionDepth();
      try
      {
        TField field;
        iprot.ReadStructBegin();
        while (true)
        {
          field = iprot.ReadFieldBegin();
          if (field.Type == TType.Stop) { 
            break;
          }
          switch (field.ID)
          {
            case 1:
              if (field.Type == TType.String) {
                Dep_id = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 2:
              if (field.Type == TType.String) {
                Lnl_id = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 3:
              if (field.Type == TType.String) {
                Dep_parent_id = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 4:
              if (field.Type == TType.String) {
                Ad_id = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 5:
              if (field.Type == TType.String) {
                Dep_no = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 6:
              if (field.Type == TType.String) {
                Dep_name = iprot.ReadString();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 7:
              if (field.Type == TType.Bool) {
                Dep_isspecial = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            case 8:
              if (field.Type == TType.Bool) {
                Dep_isdeleted = iprot.ReadBool();
              } else { 
                TProtocolUtil.Skip(iprot, field.Type);
              }
              break;
            default: 
              TProtocolUtil.Skip(iprot, field.Type);
              break;
          }
          iprot.ReadFieldEnd();
        }
        iprot.ReadStructEnd();
      }
      finally
      {
        iprot.DecrementRecursionDepth();
      }
    }

    public void Write(TProtocol oprot) {
      oprot.IncrementRecursionDepth();
      try
      {
        TStruct struc = new TStruct("Department");
        oprot.WriteStructBegin(struc);
        TField field = new TField();
        if (Dep_id != null && __isset.dep_id) {
          field.Name = "dep_id";
          field.Type = TType.String;
          field.ID = 1;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Dep_id);
          oprot.WriteFieldEnd();
        }
        if (Lnl_id != null && __isset.lnl_id) {
          field.Name = "lnl_id";
          field.Type = TType.String;
          field.ID = 2;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Lnl_id);
          oprot.WriteFieldEnd();
        }
        if (Dep_parent_id != null && __isset.dep_parent_id) {
          field.Name = "dep_parent_id";
          field.Type = TType.String;
          field.ID = 3;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Dep_parent_id);
          oprot.WriteFieldEnd();
        }
        if (Ad_id != null && __isset.ad_id) {
          field.Name = "ad_id";
          field.Type = TType.String;
          field.ID = 4;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Ad_id);
          oprot.WriteFieldEnd();
        }
        if (Dep_no != null && __isset.dep_no) {
          field.Name = "dep_no";
          field.Type = TType.String;
          field.ID = 5;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Dep_no);
          oprot.WriteFieldEnd();
        }
        if (Dep_name != null && __isset.dep_name) {
          field.Name = "dep_name";
          field.Type = TType.String;
          field.ID = 6;
          oprot.WriteFieldBegin(field);
          oprot.WriteString(Dep_name);
          oprot.WriteFieldEnd();
        }
        if (__isset.dep_isspecial) {
          field.Name = "dep_isspecial";
          field.Type = TType.Bool;
          field.ID = 7;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(Dep_isspecial);
          oprot.WriteFieldEnd();
        }
        if (__isset.dep_isdeleted) {
          field.Name = "dep_isdeleted";
          field.Type = TType.Bool;
          field.ID = 8;
          oprot.WriteFieldBegin(field);
          oprot.WriteBool(Dep_isdeleted);
          oprot.WriteFieldEnd();
        }
        oprot.WriteFieldStop();
        oprot.WriteStructEnd();
      }
      finally
      {
        oprot.DecrementRecursionDepth();
      }
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("Department(");
      bool __first = true;
      if (Dep_id != null && __isset.dep_id) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Dep_id: ");
        __sb.Append(Dep_id);
      }
      if (Lnl_id != null && __isset.lnl_id) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Lnl_id: ");
        __sb.Append(Lnl_id);
      }
      if (Dep_parent_id != null && __isset.dep_parent_id) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Dep_parent_id: ");
        __sb.Append(Dep_parent_id);
      }
      if (Ad_id != null && __isset.ad_id) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Ad_id: ");
        __sb.Append(Ad_id);
      }
      if (Dep_no != null && __isset.dep_no) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Dep_no: ");
        __sb.Append(Dep_no);
      }
      if (Dep_name != null && __isset.dep_name) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Dep_name: ");
        __sb.Append(Dep_name);
      }
      if (__isset.dep_isspecial) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Dep_isspecial: ");
        __sb.Append(Dep_isspecial);
      }
      if (__isset.dep_isdeleted) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Dep_isdeleted: ");
        __sb.Append(Dep_isdeleted);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
